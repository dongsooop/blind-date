name: workflow.yml
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # SSH 접속을 위한 SSH 키 설정
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 원격 서버의 SSH 호스트 키를 저장하여 SSH 연결 시 신뢰성을 확인하는 과정
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # QEMU 설정 (다중 아키텍처 빌드를 위한 에뮬레이터)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Docker Buildx 설정 (다중 플랫폼 빌드 드라이버 활성화)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/blinddate:latest,${{ secrets.DOCKER_USERNAME }}/blinddate:${{ github.sha }}

      # Docker Compose로 전체 애플리케이션 빌드 및 실행 (테스트용)
      - name: Run Docker Compose for testing
        run: |
          docker compose up --build -d
        continue-on-error: false

      # 서버에서 파일을 최신화 하고, 배포 스크립트를 통해 실제 배포 진행
      - name: Deploy with Docker Compose on server
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} -p ${{ secrets.PORT }} " \
            cd /home/ubuntu/dongsoop && 
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} && 
            docker pull \${DOCKER_USERNAME}/blinddate:latest && 
            docker stop blinddate && 
            docker compose -f blinddate-compose.yml up -d && 
            docker system prune -af
          "